I"í<p>Sempre fui um cara bastante preocupado em organiza√ß√£o e acho que acabei passando essa caracter√≠stica pro mundo do desenvolvimento. Por exemplo, c√≥digo n√£o identado ou com a falta de um padr√£o s√£o coisas que me incomodam um pouco. Se voc√™ se interessa pelo assunto, recomendo esse <a href="https://medium.com/@shankarcabus/css-escalavel-parte-1-41e7e863799e">artigo</a> do <a href="https://twitter.com/ShankarCabus">Shankar Cabus</a> que √© focado em CSS escal√°vel.</p>

<p>Sou daqueles que prefere pecar pelo excesso do que pela falta. Pra mim, tudo tem que ser documentado/explicado. O que voc√™ est√° escrevendo ali na hora, outras pessoas n√£o tem como adivinhar e at√© voc√™ mesmo pode esquecer isso depois de um tempo.</p>

<p>Falando em CSS, eu gosto de utilizar coment√°rios para divis√£o do c√≥digo em blocos. Fiz h√° um tempo atr√°s uns <a href="https://github.com/raphaelfabeni/css-comments">snippets para o Sublime Text</a> com base no que √© proposto pelo <a href="https://github.com/necolas/idiomatic-css">idiomatic-css</a> e n√£o consigo mais viver sem. Se voc√™ √© como eu, e se interessa pelo assunto, apresentei uma talk r√°pida <a href="https://speakerdeck.com/raphaelfabeni/organizando-o-css">sobre organiza√ß√£o de CSS</a> em um dos <a href="http://www.meetup.com/CSS-SP/">Meetups de CSS</a> e recomendo tamb√©m essa [talk sobre manuten√ß√£o e refatora√ß√£o de CSS] do <a href="https://twitter.com/lucasmazza">Lucas Mazza</a> que aborda uns assuntos bem legais.</p>

<h2 id="arrumando-a-casa">Arrumando a casa</h2>

<p>Algum tempo atr√°s acabei mexendo em um c√≥digo CSS <em>beeeeem</em> antigo. Logo de cara j√° sai arrumando indenta√ß√£o e principalmente adotando um padr√£o para a escrita do c√≥digo. <em>Mas que padr√£o √© esse?</em>, voc√™ deve estar se perguntando. S√£o coisas simples. Por exemplo, o trecho de c√≥digo abaixo:</p>

<script src="https://gist.github.com/e6e74a1136ef8a1ea73ad8dc891de908.js"> </script>

<p>Ficaria assim:</p>

<script src="https://gist.github.com/16603c9a90eeba80dafc0315b7ded405.js"> </script>

<p>S√£o pequenos detalhes, mas que para mim fazem uma diferen√ßa tremenda. Principalmente na leitura do todo. Mas tr√™s classes s√£o tranquilas de mudar, e quando voc√™ tem v√°rios arquivos? Minha id√©ia foi ir para o <em>Find &amp; Replace</em> do Sublime Text.</p>

<p>Suponha que temos o seguinte c√≥digo:</p>

<script src="https://gist.github.com/34186c479d013995a4aafc7718ba8762.js"> </script>

<p>Eu iria querer pegar o <code class="highlighter-rouge">:</code> que vem depois da propriedade e colocar um espa√ßo logo ap√≥s ele, separando-o do valor e assim melhorando um pouco a leitura. Mas veja o que acontece:</p>

<script src="https://gist.github.com/b076a870c39d90bc64857ca86202728a.js"> </script>

<p>Viram? Ele insere tamb√©m um espa√ßo antes do <code class="highlighter-rouge">hover</code>. Poder√≠amos arrumar isso manualmente ou at√© fazer um outro <em>Find &amp; Replace</em>, trocando <code class="highlighter-rouge">: hover</code> por <code class="highlighter-rouge">:hover</code>. Mas n√£o, queria brincar um pouco mais. E foi a√≠ que pensei: <em>por que n√£o Regex?</em> #oremos</p>

<h2 id="regex-nosso-de-cada-dia">Regex nosso de cada dia</h2>

<p>Lembro de uma vez conversando com o <a href="https://twitter.com/rafaelrinaldi">Rinaldi</a> que ele disse que ningu√©m domina regex e, realmente acho que pra dominar a parada voc√™ tem que ser tipo Batman. Brincadeiras a parte, regex √© muito bacana, apesar de ter dado tela azul na minha cabe√ßa algumas vezes.</p>

<p>Minha id√©ia era tentar aplicar o b√°sico de regex no <em>Find &amp; Replace</em> para tentar solucionar problemas como o citado acima com os <code class="highlighter-rouge">:</code>. Antes de qualquer coisa, estou usando o <em>Find &amp; Replace</em> do Sublime Text que pode ser acessado pelo comando <code class="highlighter-rouge">cmd + shift + f</code> e, ativando a op√ß√£o de Regex (clicando em bot√£o do lado esquerdo que tem um ponto e um asterisco =&gt; <code class="highlighter-rouge">.*</code>).</p>

<h3 id="caso-1--os-dois-pontos">Caso 1 =&gt; os dois pontos</h3>

<script src="https://gist.github.com/edba449f2403e1d1fae69fd6260d8080.js"> </script>

<ul>
  <li><em>Find</em> =&gt; <code class="highlighter-rouge">([a-zA-z0-9])\:(?!hover|focus)([a-zA-z0-9])</code></li>
  <li><em>Replace</em> =&gt; <code class="highlighter-rouge">$1: $2</code></li>
</ul>

<p>Nesse caso estamos buscando quaisquer digitos ou letras (exceto que formem as strings <em>hover</em> ou <em>focus</em>) e que estejam em volta de um <code class="highlighter-rouge">:</code> e substituindo pelo primeiro <em>match</em> seguido de dois pontos, espa√ßo e o segundo <em>match</em>; deixando nosso c√≥digo assim.</p>

<script src="https://gist.github.com/58297a566135e883f6c4f7d06bb3e76d.js"> </script>

<h3 id="caso-2--as-chaves">Caso 2 =&gt; as chaves</h3>

<ul>
  <li><em>Find</em> =&gt; <code class="highlighter-rouge">([a-zA-z0-9])\{([a-zA-z0-9])</code></li>
  <li><em>Replace</em> =&gt; <code class="highlighter-rouge">$1 { $2</code></li>
</ul>

<p>Agora apenas buscamos <code class="highlighter-rouge">{</code> que estejam envoltas em letras ou n√∫meros e aplicamos um espa√ßo em volta delas.</p>

<script src="https://gist.github.com/b2a096cb2a3b2c010b05d747016a0b41.js"> </script>

<ul>
  <li><em>Find</em> =&gt; <code class="highlighter-rouge">(\;)\}</code></li>
  <li><em>Replace</em> =&gt; <code class="highlighter-rouge">$1 }</code></li>
</ul>

<p>Continuando agora para a chave de fechamento, buscamos qualquer <code class="highlighter-rouge">;</code> que seja seguida de uma <code class="highlighter-rouge">}</code> e apenas adicionamos um espa√ßo antes dela.</p>

<script src="https://gist.github.com/6968be9d8f7e87fdda221f87174ce6dc.js"> </script>

<h3 id="caso-3--o-ponto-e-v√≠rgula">Caso 3 =&gt; o ponto e v√≠rgula</h3>

<ul>
  <li><em>Find</em> =&gt; <code class="highlighter-rouge">([a-zA-z0-9])\;([a-zA-z0-9])</code></li>
  <li><em>Replace</em> =&gt; <code class="highlighter-rouge">$1;\n\t$2</code></li>
</ul>

<p>Agora buscamos todo <code class="highlighter-rouge">;</code> que esteja entre letras e/ou d√≠gitos e substitu√≠mos pelo primeiro <em>match</em> seguido do ponto e v√≠rgula, uma quebra de linha, um <em>tab</em> e por fim o segundo <em>match</em>; deixando nosso c√≥digo dessa maneira.</p>

<script src="https://gist.github.com/8f13f7354e997faa92e1562bc3031bba.js"> </script>

<h2 id="vale-a-pena">Vale a pena?</h2>

<p>Estamos na era da automatiza√ß√£o e eu me perguntei logo no in√≠cio se n√£o teria alguma ferramenta ou at√© extens√£o do Sublime que fizesse isso. Antes de procurar a resposta, resolvi brincar um pouco com regex.</p>

<p>A resposta da pergunta acima acredito que seja meio √≥bvia e espero que voc√™ n√£o fique bravo de ter lido at√© aqui e descobrir que <strong>sim</strong>, existem solu√ß√µes prontas para isso. Uma delas √© o <a href="https://packagecontrol.io/packages/SassBeautify">SassBeautify</a> que pode ser instalado via <em>package control</em>.</p>
:ET