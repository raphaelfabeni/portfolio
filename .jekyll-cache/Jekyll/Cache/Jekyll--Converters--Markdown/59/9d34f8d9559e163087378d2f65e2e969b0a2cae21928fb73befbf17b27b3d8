I"®<p>Contribute in <em>open source</em> projects is one of the coolest things in development area. I also remember, that some years ago, the topic of one edition of FEMUG was exactly this: the contribution in open source projects.</p>

<p>Itâ€™s common to be ashamed to contribute with some project, and one of the reasons for it is because you donâ€™t think you have something to contribute. And thatâ€™s the point: you can start with anything: a simple revision of code or even a translation.</p>

<h2 id="the-process">The process</h2>

<p>As you get used to contribute, the process becomes automatic. But for a person who is going to contribute for the first time, some parts could be confusing.</p>

<p>A simple step by step could be something like that:</p>

<ol>
  <li><em>Fork</em> of the project to your Github user.</li>
  <li><em>Clone</em> of the project <em>forked</em> in your machine.</li>
  <li>Your magic contribution.</li>
  <li>Updating of your project version with the original project.</li>
  <li>Send your <em>commits</em> to your GitHub.</li>
  <li>Open a <em>pull request</em> to the original project.</li>
</ol>

<p>Believe it: doing is easier than writing. The step four was the most confuse for me. And thatâ€™s why I decided to show here.</p>

<h2 id="the-upstream-guy">The <em>upstream</em> guy</h2>

<p>Letâ€™s suppose that we <em>foked</em> the project <em>2017-is-awesome</em> to our GitHub user account. So, at this moment, the <em>original project</em> and your <em>fork</em> are at the same point and equal.</p>

<p>So, we start to make a lot of changes in our version of the project and we commit them. Simultaneously, you realize that the original project merged a pull request. Now, the projects arenâ€™t equal: actually they have a lot of diferences.</p>

<ul>
  <li>Your <em>local</em> project has all your changes.</li>
  <li>The <em>original</em> project has new changes from the pull request merged.</li>
</ul>

<p>If you send your changes to GitHub and try to open a pull request, you are going to realize that it wouldnâ€™t be possible. For do that, we have update our local project with the original; and thatâ€™s when the <em>upstream</em> will help us.</p>

<p>Letâ€™s say you are contributing with my simple blog (the code is really old!). We add a <em>remote</em> based on the original version of the blog:</p>

<script src="https://gist.github.com/98964a4188b35181e27c8efab7945b40.js"> </script>

<p>After that, we have to update the <em>upstream</em>: <code class="highlighter-rouge">$ git fetch upstream</code></p>

<p>With the <em>upstream</em> updated, we have to <code class="highlighter-rouge">merge/rebase</code> our local version (supposing youâ€™re on the <code class="highlighter-rouge">master</code> branch):</p>

<script src="https://gist.github.com/449b8a7a0ebc08dc28daabcc36ceae69.js"> </script>

<p>Now if you want to update your Github repository with your local repository before making your changes and commit them, we do:</p>

<script src="https://gist.github.com/5665e29e6499b749b6e35c45a42ac479.js"> </script>

<p>And thatâ€™s it! Now our local project is sync and updated with the original version, and if you send the changes to GitHub, the pull request will be enabled.</p>
:ET