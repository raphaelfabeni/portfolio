I"Ì<p>Contribuir em projetos <em>open source</em> √© uma das coisas mais legais da √°rea de desenvolvimento. Ano passado, sen√£o me engano no Intercon WP do iMasters, rolou um FEMUG dentro do evento e, um dos temas abordados foi exatamente esse: a contribui√ß√£o em projetos.</p>

<p>Muitas vezes (sen√£o a maioria) √© normal termos receio em contribuir em algum projeto pelo simples fato de achar que n√£o podemos contribuir em nada com o que est√° ali. E foi exatamente a√≠ que o FEMUG cutucou, incentivando a todos que estavam ali a come√ßar a contribuir, seja com c√≥digo, ou at√© mesmo revis√£o/tradu√ß√£o.</p>

<h2 id="o-processo">O processo</h2>

<p>Pra quem j√° est√° acostumado, o processo de contribui√ß√£o acaba se tornando autom√°tico. J√° pra quem ainda est√° iniciando, algumas partes podem parecer confusas, mas aqui cito uma frase que ouvi do <a href="http://twitter.com/danielfilho">Daniel Filho</a> que trabalha comigo na Netshoes que √© a seguinte: ‚Äú<em>Tudo √© mais f√°cil do que parece‚Ä¶</em>‚Äù. E √© verdade!</p>

<p>O processo de contribui√ß√£o basicamente √© o seguinte:</p>

<ol>
  <li><em>Fork</em> do projeto para o seu usu√°rio.</li>
  <li><em>Clone</em> do projeto <em>forkado</em> na sua m√°quina.</li>
  <li><em>Taca-le pau</em> ..</li>
  <li>Atualiza√ß√£o do seu projeto com o projeto original.</li>
  <li><em>Commitar</em> e enviar suas altera√ß√µes para o seu GitHub.</li>
  <li>Abrir um <em>pull request</em> para o projeto original.</li>
</ol>

<p>Acho que √© isso basicamente! Fazendo √© muito mais f√°cil do que escrevendo (acredite!). Um item que me perdi um pouco logo quando comecei a contribuir em projetos foi o item 4. E √© por isso que queria mostrar aqui rapidamente pra que outras pessoas possam pular essa parte que patinei no come√ßo.</p>

<h2 id="o-cara-upstream">O cara <em>upstream</em></h2>

<p>Vamos supor que forkamos um projeto chamado <em>2015-rocks</em> para nossa conta pessoal. Ent√£o nesse momento temos tanto o <strong>projeto original</strong> como o <strong>fork</strong> no mesmo ponto, id√™nticos.</p>

<p>A√≠ come√ßamos a <em>meter bronca</em> no projeto local e fazemos um <em>commit</em> com essas altera√ß√µes! Ao mesmo tempo, percebemos que no projeto original, um <em>pull request</em> foi aceito. Nesse ponto, os projetos j√° n√£o s√£o mais iguais; pelo contr√°rio, eles se diferenciam bastante:</p>

<ul>
  <li>o seu projeto <strong>local</strong> cont√©m todas as m√°gicas novas que voc√™ adicionou;</li>
  <li>e a vers√£o <strong>original</strong> do projeto agora tem uns paranau√™s novos que vieram do <em>PR</em> que foi aceito.</li>
</ul>

<p>Se voc√™ enviar suas altera√ß√µes para o Github e tentar fazer um <em>pull request</em> ele ir√° notificar que n√£o √© poss√≠vel fazer o <em>merge</em> do reposit√≥rio. Pra isso, precisamos atualizar nosso projeto local de acordo com a vers√£o original. E √© a√≠ que entra o tal do <em>upstream</em>.</p>

<p>Digamos que voc√™ esteja contribuindo para este humilde blog (Valeu <a href="https://github.com/juliobitencourt">Julio Bitencourt</a> pela <a href="https://github.com/raphaelfabeni/raphaelfabeni.github.io/pull/8">dica</a>) \o/</p>

<p>Adicionamos um remote com base na vers√£o original do blog:</p>

<script src="https://gist.github.com/98964a4188b35181e27c8efab7945b40.js"> </script>

<p>Ap√≥s feito isso precisamos atualizar o <em>upstream</em>: <code class="highlighter-rouge">$ git fetch upstream</code></p>

<p>Com o <em>upstream</em> atualizado, supondo que estamos no <em>branch master</em> do nosso projeto local, fazemos o <em>merge</em>:</p>

<script src="https://gist.github.com/449b8a7a0ebc08dc28daabcc36ceae69.js"> </script>

<p>Como lembrado pelo <a href="https://twitter.com/lucasmazza">Lucas Mazza</a>, aqui podemos tamb√©m usar o <code class="highlighter-rouge">rebase</code>, evitando assim a mensagem do <em>merge</em>.</p>

<p>Agora caso queira atualizar seu reposit√≥rio do Github com seu repos√≠t√≥rio local antes de fazer suas mudan√ßas e dar seu commit, fazemos:</p>

<script src="https://gist.github.com/5665e29e6499b749b6e35c45a42ac479.js"> </script>

<p>Pronto! Agora nosso projeto local e remoto est√° sincronizado e atualizado com a vers√£o original e, ap√≥s enviar suas altera√ß√µes para o GitHub, conseguimos fazer o <em>pull request</em> e torcer para ser aceito.</p>
:ET