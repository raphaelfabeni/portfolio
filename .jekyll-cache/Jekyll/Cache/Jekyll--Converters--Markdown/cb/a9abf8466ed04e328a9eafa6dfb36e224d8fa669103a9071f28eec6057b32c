I"‡<p>O CSS3 vem pra ajudar a todos. Pro desenvolvedor a vida fica mais f√°cil pois √© poss√≠vel chegar a efeitos, que antes precisavam de uma volta gigantesca, de uma forma bem mais simples; e o usu√°rio que pode ganhar uma experi√™ncia melhor e mais r√°pida.</p>

<h2 id="transition">Transition</h2>

<p>Um dos caras que fazem do <strong>CSS3</strong> um neg√≥cio t√£o bacana √© a propriedade <em>transition</em>. Ao p√© da letra e de um jeito bem direto, essa propriedade define como ser√° a transi√ß√£o entre dois <em>estilos</em>.</p>

<p>Dois estilos? Ahn? Admito que n√£o sei se <em>estilo</em> √© a palavra correta, mas pra ficar com algo mais concreto, voc√™ pode definir, por exemplo, como vai ser a transi√ß√£o de um elemento:</p>

<ul>
  <li>na troca de uma classe;</li>
  <li>nos estados <code class="highlighter-rouge">:hover</code> ou <code class="highlighter-rouge">:focus</code>.</li>
</ul>

<p>O que a propriedade <em>transition</em> faz √© analisar a diferen√ßa de valores da(s) propriedade(s) do elemento entre os dois <em>estados/estilos</em> e faz com que a transi√ß√£o aconte√ßa de forma mais suave (pode ser customizada) e n√£o de forma brusca como estamos acostumados.</p>

<figure class="text-center loading">
  <p data-height="368" data-theme-id="4240" data-slug-hash="PwRJOj" data-default-tab="result" data-user="raphaelfabeni" class="codepen">See the Pen <a href="http://codepen.io/raphaelfabeni/pen/PwRJOj/">Simple transition</a> by Raphael Fabeni (<a href="http://codepen.io/raphaelfabeni">@raphaelfabeni</a>) on <a href="http://codepen.io">CodePen</a>.</p>
</figure>

<h3 id="como-faz">Como faz?</h3>

<p>√â bem tranquilo! S√£o 4 propriedades que voc√™ tem que definir:</p>

<ul>
  <li><code class="highlighter-rouge">transition-property</code> =&gt; a propriedade a qual voc√™ vai aplicar a transi√ß√£o (se quiser aplicar em todas, voc√™ pode passar o valor <em>all</em>);</li>
  <li><code class="highlighter-rouge">transition-duration</code> =&gt; quanto tempo vai demorar a transi√ß√£o;</li>
  <li><code class="highlighter-rouge">transition-delay</code> =&gt; tempo que a transi√ß√£o vai demorar pra se iniciar (pode ser omitido e seu valor <em>default</em> √© 0);</li>
  <li><code class="highlighter-rouge">transition-timing-function</code> =&gt; como a transi√ß√£o vai progredir no tempo. Aceita os valores <em>linear</em>, <em>ease-out</em>, <em>ease-in</em>, <em>ease</em> e uma fun√ß√£o personalizada atrav√©s da <em>cubic-bezier()</em> (essa propriedade tamb√©m pode ser omitida e see valor <em>default</em> √© <em>ease</em>).</li>
</ul>

<p>Antes que voc√™ pergunte: n√£o, voc√™ n√£o precisa escrever uma por uma, voc√™ pode optar pelo <em>shortcode transition</em> :</p>

<script src="https://gist.github.com/32f0ba442aea19d5038a4ec5ce0e1f07.js"> </script>

<p>Dessa maneira, as varia√ß√µes abaixo tem o mesmo efeito:</p>

<script src="https://gist.github.com/0313639854ef6d1563c3c006cc916596.js"> </script>

<h3 id="encadeamento-de-transi√ß√µes">Encadeamento de transi√ß√µes</h3>

<p>Pode ser que voc√™ queira mais de uma transi√ß√£o em um elemento. Nesse momento voc√™ tem duas op√ß√µes distintas:</p>

<ul>
  <li>passar <em>all</em> para <em>transition-property</em>, assumindo que as transi√ß√µes ter√£o a mesma dura√ß√£o, delay e <em>timing-function</em>;</li>
  <li>ou passar <em>transi√ß√µes</em> diferentes para cada propriedade, podendo <em>brincar</em> com as propriedades espec√≠ficas de <em>transition</em> para cada uma.</li>
</ul>

<p>No exemplo abaixo, o primeiro ret√¢ngulo tem a <em>transition-property</em> definido como <em>all</em> o que faz que tanto a transi√ß√£o de largura como de <em>background</em> tenham as mesmas caracter√≠sticas de dura√ß√£o, delay e <em>timing-function</em>. J√° no segundo ret√¢ngulo, as transi√ß√µes s√£o encadeadas: a primeira transi√ß√£o que √© a de largura ocorre e s√≥ depois de finalizada que ocorre a transi√ß√£o de <em>background</em>. Isso acontece pois essa √∫ltima tem um delay de <em>.3 segundos</em> que √© o mesmo tempo de dura√ß√£o da primeira transi√ß√£o.</p>

<figure class="text-center loading">
  <p data-height="360" data-theme-id="4240" data-slug-hash="radJOq" data-default-tab="result" data-user="raphaelfabeni" class="codepen">See the Pen <a href="http://codepen.io/raphaelfabeni/pen/radJOq/">Simple transition (multiple)</a> by Raphael Fabeni (<a href="http://codepen.io/raphaelfabeni">@raphaelfabeni</a>) on <a href="http://codepen.io">CodePen</a>.</p>
</figure>

<h2 id="dicas-e-suporte">Dicas e suporte</h2>

<p>Em rela√ß√£o ao suporte, <a href="http://caniuse.com/#search=transition">segundo o site do Can I Use</a>, funciona a partir do IE10 e dependendo da vers√£o de algum navegador voc√™ talvez precise dos prefixos.</p>

<p>A princ√≠pio pode parecer algo muito simples, mas com criatividade √© poss√≠vel fazer coisas bem legais e poderosas.</p>

<p>Algum tempo atr√°s criei um reposit√≥rio no GitHub chamado <a href="http://github.com/raphaelfabeni/lab-css3">Lab CSS3</a> com o objetivo de estudar um pouco mais e montar uns exemplos usando <em>CSS3</em>. Tem algumas coisas utilizando <em>transition</em> como esse <a href="http://www.raphaelfabeni.com.br/lab-css3/transition-tabs.html">componente de abas</a> e esse <em><a href="http://www.raphaelfabeni.com.br/lab-css3/transition-accordion.html">accordion</a></em>. <a href="http://www.raphaelfabeni.com.br/lab-css3/index.html">Tem algumas outras coisas</a> sobre animation e transform, que pretendo abordar nos pr√≥ximos posts.</p>

<h2 id="confer√™ncia-css-brasil">Confer√™ncia CSS Brasil</h2>

<p>J√° que estamos falando de CSS, esse ano vai rolar a <a href="http://conferenciacssbrasil.com.br">Confer√™ncia CSS Brasil</a>, a primeira confer√™ncia nacional focada em CSS. A id√©ia do evento √© compartilhar conhecimento e mostrar o poder do CSS. Ea√≠.. bora? <strong>#dica:</strong> Em parceria com a comunidade <a href="https://www.facebook.com/groups/cssbrazil/">css3br do Facebook</a>, t√° rolando um cupom de desconto =&gt; <em>divulgacss3br</em>. \o/</p>

<script async="" src="//assets.codepen.io/assets/embed/ei.js"></script>

:ET